<Window x:Class="BainsTech.DocMailer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:do="clr-namespace:BainsTech.DocMailer.DataObjects"
        Title="Document Mailer" Height="600" Width="750">
    <FrameworkElement.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="DisableWhenRefreshingStyle" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=MailerDocumentsViewModel.Sending}" Value="True">
                    <Setter Property="UIElement.IsEnabled" Value="false"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=MailerDocumentsViewModel.Sending}" Value="False">
                    <Setter Property="UIElement.IsEnabled" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </FrameworkElement.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" >
            <TextBlock Text="{Binding Path=MailerDocumentsViewModel.StatusText}" Foreground="OrangeRed"/>
        </StatusBar> 
        <Grid DockPanel.Dock="Bottom">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Row="0" VerticalAlignment="Top" Header="Settings:" Margin="2" Padding="2">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0">
                <Label Content="Documents Location:" Margin="0,0,2,0"/>
                <Label BorderBrush="Blue" BorderThickness="2" Padding="2" Content="{Binding DocumentsLocation}"/>
                <Label Content="Email:" Margin="15,0,2,0"/>
                <Label BorderBrush="Blue" BorderThickness="2" Padding="2" Content="{Binding EmailAddress}"/>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="1" Margin="2" Padding="2" BorderBrush="OrangeRed" BorderThickness="2"
              VerticalAlignment="Top" Header="Set Password:"
              Visibility="{Binding PasswordConfigViewModel.IsEmailPasswordNeeded, Converter={StaticResource BoolToVis}}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2">
                <Label Content="Enter and set you email password:"/>
                <PasswordBox Name="PasswordBox" Width="250" Margin="0,0,0,0"/>
                <Button Click="SetPasswordButton_OnClick" Content="Set Password" Margin="6,0,0,0"/>
            </StackPanel>
        </GroupBox>
        <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Top">
            <Button Content="Refresh Documents" Margin="4" Style="{StaticResource DisableWhenRefreshingStyle}"
              Command="{Binding Path=MailerDocumentsViewModel.RefreshDocumentsListCommand}"/>
            <Button Content="Email Documents" Margin="4" Style="{StaticResource DisableWhenRefreshingStyle}"
              IsEnabled="{Binding Path=MailerDocumentsViewModel.HaveDocsToSend}"
              Command="{Binding Path=MailerDocumentsViewModel.MailDocumentsCommand}"/>
            <TextBlock Margin="4"
                 Text="{Binding Path=MailerDocumentsViewModel.TotalDocCount, StringFormat='Douments: {0}'}"/>
            <TextBlock Margin="4"
                 Text="{Binding Path=MailerDocumentsViewModel.ReadyToSendCount, StringFormat='Ready to send: {0}'}"/>
            <TextBlock Margin="4"
                 Text="{Binding Path=MailerDocumentsViewModel.CantSendCount, StringFormat='Cant send: {0}'}"/>
            <TextBlock Margin="4" Text="{Binding Path=MailerDocumentsViewModel.SentCount, StringFormat='Sent: {0}'}"/>
            <TextBlock Margin="4"
                 Text="{Binding Path=MailerDocumentsViewModel.SendFailedCount, StringFormat='Send failed: {0}'}"/>
        </StackPanel>
        <ListView Grid.Row="3" AlternationCount="2"  Margin="4"
              ItemsSource="{Binding Path=MailerDocumentsViewModel.Documents}">
            <FrameworkElement.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Control.Background" Value="PapayaWhip"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Control.Background" Value="White"/>
                        </Trigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.ReadyToSend}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="DarkBlue"/>
                        </DataTrigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.IncompatibleFileName}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="Gray"/>
                        </DataTrigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.NoMappedEmail}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="Gray"/>
                        </DataTrigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.Sending}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="DeepPink"/>
                        </DataTrigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.Sent}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Value="{x:Static do:DocumentStatus.SendFailed}" Binding="{Binding Status}">
                            <Setter Property="Control.Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </FrameworkElement.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Document" Width="250" DisplayMemberBinding="{Binding FileName}"/>
                    <GridViewColumn Header="Email Address" Width="250" DisplayMemberBinding="{Binding EmailAddress}"/>
                    <GridViewColumn Header="StatusDesc" Width="250"
                          DisplayMemberBinding="{Binding StatusDesc, UpdateSourceTrigger=PropertyChanged}"/>
                    <GridViewColumn Header="Status" Width="200"
                          DisplayMemberBinding="{Binding Status, UpdateSourceTrigger=PropertyChanged}"/>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
    </DockPanel>
</Window>